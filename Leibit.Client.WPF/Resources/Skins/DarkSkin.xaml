<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Leibit.Controls;assembly=Leibit.Controls.WPF"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <!-- Common-->
    <SolidColorBrush x:Key="TextForeground" Color="White"/>
    <SolidColorBrush x:Key="WindowBackground" Color="#111"/>

    <!-- Main View -->
    <SolidColorBrush x:Key="MainViewBackground" Color="#222"/>
    <SolidColorBrush x:Key="MenuForeground" Color="#eee"/>
    <SolidColorBrush x:Key="MenuBackground" Color="#444"/>
    <SolidColorBrush x:Key="SubMenuBorder" Color="#333"/>
    <SolidColorBrush x:Key="SubMenuBackground" Color="#111"/>
    <SolidColorBrush x:Key="ToolbarBackground" Color="#444"/>
    <SolidColorBrush x:Key="MenuHighlightBackground" Color="#666"/>
    <SolidColorBrush x:Key="SubMenuHighlightBackground" Color="#444"/>
    <SolidColorBrush x:Key="MenuSeparatorColor" Color="#333"/>
    <SolidColorBrush x:Key="StatusBarForeground" Color="#eee"/>
    <SolidColorBrush x:Key="StatusBarBackground" Color="#333"/>

    <!-- DataGrid -->
    <SolidColorBrush x:Key="DataGridBorder" Color="#678"/>
    <SolidColorBrush x:Key="DataGridColumnHeaderBorder" Color="#666"/>
    <SolidColorBrush x:Key="DataGridColumnHeaderBackground" Color="#222"/>
    <SolidColorBrush x:Key="DataGridColumnHeaderSortedBorder" Color="#678"/>
    <SolidColorBrush x:Key="DataGridColumnHeaderSortedBackground" Color="#234"/>
    <SolidColorBrush x:Key="DataGridColumnHeaderHoverBorder" Color="#678"/>
    <SolidColorBrush x:Key="DataGridColumnHeaderHoverBackground" Color="#456"/>
    <SolidColorBrush x:Key="DataGridAlternationBackground" Color="#333"/>
    <SolidColorBrush x:Key="DataGridRowHover" Color="#6def"/>
    <SolidColorBrush x:Key="DataGridGroupingAreaBackground" Color="#444"/>
    <SolidColorBrush x:Key="DataGridGroupingAreaHover" Color="#678"/>

    <!-- Train progress information -->
    <SolidColorBrush x:Key="ReadyColor" Color="DarkGreen"/>
    <SolidColorBrush x:Key="DelayBlue" Color="DarkCyan"/>
    <SolidColorBrush x:Key="DelayYellow" Color="DarkGoldenrod" />
    <SolidColorBrush x:Key="DelayRed" Color="DarkRed"/>

    <!-- Train Schedule -->
    <SolidColorBrush x:Key="TrainScheduleLineColor" Color="#ccc"/>

    <!-- TextBox -->
    <Style TargetType="TextBox">
        <Setter Property="Foreground" Value="{StaticResource TextForeground}"/>
        <Setter Property="Background" Value="{StaticResource WindowBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextForeground}"/>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#888"/>
                <Setter Property="BorderBrush" Value="#888"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Button -->
    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource TextForeground}"/>
        <Setter Property="Background" Value="{StaticResource WindowBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextForeground}"/>
        <Setter Property="Padding" Value="5,2"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#456"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#888"/>
                <Setter Property="BorderBrush" Value="#888"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource ButtonStyle}"/>

    <Style x:Key="SimpleMenuButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="BorderBrush" Value="Transparent"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SubMenuHighlightBackground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- CheckBox -->
    <Style TargetType="CheckBox">
        <Setter Property="Foreground" Value="{StaticResource TextForeground}"/>
        <Setter Property="Background" Value="{StaticResource WindowBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextForeground}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <Border Width="14" Height="14" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="True">
                            <Path x:Name="CheckMark"
                                  Margin="1"
                                  Stretch="Fill"
                                  Visibility="Hidden"
                                  Fill="{TemplateBinding Foreground}"
                                  Data="M 0 2.0 L 0 4.8 L 2.5 7.4 L 7.1 2.8 L 7.1 0 L 2.5 4.6 Z"/>
                        </Border>

                        <ContentPresenter Margin="5,0,0,0"/>
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#456"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#888"/>
                            <Setter Property="BorderBrush" Value="#888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox -->
    <Style TargetType="ComboBox">
        <Setter Property="Foreground" Value="{StaticResource TextForeground}"/>
        <Setter Property="Background" Value="{StaticResource WindowBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextForeground}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="True">
                        <Grid>
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" PopupAnimation="Slide">
                                <Grid MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border Background="#222" BorderBrush="#456" BorderThickness="1">
                                        <ScrollViewer>
                                            <StackPanel IsItemsHost="True" />
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>

                            <ToggleButton IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Background="Transparent" HorizontalAlignment="Stretch" BorderThickness="0">
                                            <Border Width="16" HorizontalAlignment="Right" Background="Transparent" BorderThickness="0">
                                                <Path HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Fill="{StaticResource TextForeground}"
                                                        Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"/>
                                            </Border>
                                        </Border>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>

                            <ContentPresenter Margin="3,3,21,3"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#456"/>
            </Trigger>

            <Trigger Property="IsDropDownOpen" Value="True">
                <Setter Property="BorderBrush" Value="#678"/>
                <Setter Property="Background" Value="#345"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#888"/>
                <Setter Property="BorderBrush" Value="#888"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ComboBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="True" Padding="3,0">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="#678"/>
                <Setter Property="Background" Value="#345"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="#678"/>
                <Setter Property="Background" Value="#123"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- IntegerUpDown -->
    <Style TargetType="xctk:IntegerUpDown">
        <Setter Property="Foreground" Value="{StaticResource TextForeground}"/>
        <Setter Property="Background" Value="{StaticResource WindowBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextForeground}"/>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#888"/>
                <Setter Property="BorderBrush" Value="#888"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ColorPicker -->
    <Style TargetType="xctk:ColorPicker">
        <Setter Property="DropDownBackground" Value="#222"/>
        <Setter Property="HeaderBackground" Value="#222"/>
        <Setter Property="HeaderForeground" Value="{StaticResource TextForeground}"/>
        <Setter Property="TabBackground" Value="#555"/>
        <Setter Property="TabForeground" Value="{StaticResource TextForeground}"/>
    </Style>

    <!-- ImageButton -->
    <Style x:Key="ImageButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="1"/>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <ContentPresenter Margin="2" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MenuHighlightBackground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- DropDownButton -->
    <SolidColorBrush x:Key="DropDownArrowFill" Color="#FFDDDDDD"/>

    <Style x:Key="DropDownButtonStyle" TargetType="Button" BasedOn="{StaticResource ImageButtonStyle}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <ContentPresenter Margin="1,2,1,2" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DropDownButtonArrowStyle" TargetType="Button" BasedOn="{StaticResource ImageButtonStyle}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <ContentPresenter Margin="2" Opacity="0.3" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- ContextMenu -->
    <Style TargetType="ContextMenu">
        <Setter Property="Foreground" Value="{StaticResource TextForeground}"/>
        <Setter Property="Background" Value="{StaticResource SubMenuBackground}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{StaticResource SubMenuBorder}" BorderThickness="1" SnapsToDevicePixels="True">
                        <Grid>
                            <Rectangle Fill="{StaticResource MenuSeparatorColor}" Width="1" Margin="29,2,0,2" HorizontalAlignment="Left"/>
                            <ItemsPresenter />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- MenuItem -->
    <ControlTemplate x:Key="TopMenuItemTemplate" TargetType="MenuItem">
        <Border x:Name="layoutRoot" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="1">
            <Grid>
                <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Padding}"/>

                <Popup IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       PopupAnimation="Slide"
                       Placement="Bottom"
                       PlacementTarget="{Binding ElementName=layoutRoot}">
                    <Border Background="{StaticResource SubMenuBackground}" BorderBrush="{StaticResource SubMenuBorder}" BorderThickness="1" SnapsToDevicePixels="True">
                        <Grid>
                            <Rectangle HorizontalAlignment="Left"
                                           Width="1"
                                           Margin="29,2,0,2"
                                           Fill="{StaticResource MenuSeparatorColor}"/>
                            <ItemsPresenter/>
                        </Grid>
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MenuHighlightBackground}"/>
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter Property="Background" Value="{StaticResource SubMenuBackground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SubMenuItemTemplate" TargetType="MenuItem">
        <Border x:Name="layoutRoot" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="22"/>
                    <ColumnDefinition Width="13"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter x:Name="Icon"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Width="16"
                                  Height="16"
                                  Margin="3"/>

                <ContentPresenter x:Name="menuHeaderContainer"
                    Grid.Column="2"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    ContentSource="Header"
                    RecognizesAccessKey="True"
                    Margin="{TemplateBinding MenuItem.Padding}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                <Path x:Name="RightArrow"
                      Grid.Column="4"
                      Data="M 0,0 L 4,3.5 L 0,7 Z"
                      Margin="10,0,0,0"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Left"
                      Visibility="Collapsed"
                      Fill="#ddd" />

                <Popup IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       PopupAnimation="Slide"
                       Placement="Right"
                       PlacementTarget="{Binding ElementName=layoutRoot}">
                    <Border Background="{StaticResource SubMenuBackground}" BorderBrush="{StaticResource SubMenuBorder}" BorderThickness="1" SnapsToDevicePixels="True">
                        <Grid>
                            <Rectangle HorizontalAlignment="Left"
                                           Width="1"
                                           Margin="29,2,0,2"
                                           Fill="{StaticResource MenuSeparatorColor}"/>
                            
                            <ItemsPresenter/>
                        </Grid>
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SubMenuHighlightBackground}"/>
                <Setter TargetName="RightArrow" Property="Fill" Value="Blue"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter TargetName="RightArrow" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#888"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="MenuItem">
        <Setter Property="Template" Value="{StaticResource SubMenuItemTemplate}"/>

        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource TopMenuItemTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Images -->
    <BitmapImage x:Key="imgNew" UriSource="/Leibit;component/Resources/Images/Dark/new.png" />
    <BitmapImage x:Key="imgOpen" UriSource="/Leibit;component/Resources/Images/Dark/open.png" />
    <BitmapImage x:Key="imgSave" UriSource="/Leibit;component/Resources/Images/Dark/save.png" />
    <BitmapImage x:Key="imgSettings" UriSource="/Leibit;component/Resources/Images/Dark/settings.png" />
    <BitmapImage x:Key="imgZfi" UriSource="/Leibit;component/Resources/Images/Dark/zfi.png" />
    <BitmapImage x:Key="imgBfo" UriSource="/Leibit;component/Resources/Images/Dark/bfo.png" />
    <BitmapImage x:Key="imgTrainSchedule" UriSource="/Leibit;component/Resources/Images/Dark/train_schedule.png" />
    <BitmapImage x:Key="imgSelect" UriSource="/Leibit;component/Resources/Images/Dark/select.png" />
    <BitmapImage x:Key="imgClear" UriSource="/Leibit;component/Resources/Images/Dark/clear.png" />
    <BitmapImage x:Key="imgLocalOrders" UriSource="/Leibit;component/Resources/Images/Dark/local_orders.png" />
    <BitmapImage x:Key="imgHelp" UriSource="/Leibit;component/Resources/Images/Dark/help.png" />
    <BitmapImage x:Key="imgInfo" UriSource="/Leibit;component/Resources/Images/Dark/info.png" />
    <BitmapImage x:Key="imgFlash" UriSource="/Leibit;component/Resources/Images/Dark/flash.png" />
    <BitmapImage x:Key="imgSaveLayout" UriSource="/Leibit;component/Resources/Images/Dark/save_layout.png" />
</ResourceDictionary>