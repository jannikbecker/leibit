<UserControl x:Class="Leibit.Controls.LeibitDataGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:conv="clr-namespace:Leibit.Core.Client.Converter;assembly=Leibit.Core.Client.WPF"
             x:Name="LeibitDataGridRoot">

    <UserControl.Resources>
        <conv:VisibilityConverter x:Key="VisibilityConverter"/>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <ItemsControl x:Name="groupedColumnsArea"
                      Grid.Row="0"
                      ItemsSource="{Binding GroupedColumns, ElementName=LeibitDataGridRoot}"
                      Visibility="{Binding CanGroup, ElementName=LeibitDataGridRoot, Converter={StaticResource VisibilityConverter}}"
                      Height="40">
            
            <ItemsControl.Style>
                <Style TargetType="ItemsControl">
                    <Setter Property="Background" Value="{DynamicResource DataGridGroupingAreaBackground}"/>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Self}}" Value="0">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ItemsControl">
                                        <Grid>
                                            <TextBlock Text="Ziehen Sie eine Spalte hierher, um nach ihr zu gruppieren" VerticalAlignment="Center" Margin="10,0,0,0"/>

                                            <Grid.Style>
                                                <Style TargetType="Grid">
                                                    <Setter Property="Background" Value="{DynamicResource DataGridGroupingAreaBackground}"/>

                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding CanGroupColumn, ElementName=LeibitDataGridRoot}" Value="True">
                                                            <Setter Property="Background" Value="{DynamicResource DataGridGroupingAreaHover}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Grid.Style>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding CanGroupColumn, ElementName=LeibitDataGridRoot}" Value="True">
                            <Setter Property="Background" Value="{DynamicResource DataGridGroupingAreaHover}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ItemsControl.Style>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Border BorderThickness="1"
                            BorderBrush="{DynamicResource TextForeground}"
                            Margin="5,0,5,0"
                            PreviewMouseLeftButtonUp="__GroupedColumn_MouseLeftButtonUp"
                            PreviewMouseMove="__GroupedColumn_MouseMove"
                            PreviewMouseLeftButtonDown="__GroupedColumn_MouseLeftButtonDown">
                        <TextBlock Grid.Column="0" Text="{Binding Header}" Margin="5,0,5,0" VerticalAlignment="Center"/>
                    </Border>
                </DataTemplate>
            </ItemsControl.ItemTemplate>

            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" Margin="5,0,5,0" VerticalAlignment="Center"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>

        <DataGrid x:Name="dataGrid"
                  Grid.Row="1"
                  ItemsSource="{Binding Collection, ElementName=LeibitDataGridRoot}"
                  SelectedItem="{Binding SelectedItem, ElementName=LeibitDataGridRoot, Mode=TwoWay}"
                  CurrentColumn="{Binding CurrentColumn, ElementName=LeibitDataGridRoot, Mode=OneWayToSource}"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserReorderColumns="True"
                  CanUserResizeColumns="True"
                  CanUserResizeRows="False"
                  AlternationCount="2"
                  Background="{DynamicResource WindowBackground}"
                  BorderBrush="{DynamicResource DataGridBorder}"
                  GridLinesVisibility="None"
                  HeadersVisibility="Column"
                  IsReadOnly="True"
                  EnableRowVirtualization="True"
                  VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                  VirtualizingPanel.VirtualizationMode="Standard"
                  VirtualizingPanel.IsVirtualizing="True"
                  ScrollViewer.CanContentScroll="True"
                  ColumnReordering="__DataGrid_ColumnReordering"
                  Loaded="__DataGrid_Loaded">

            <DataGrid.Resources>
                <Style TargetType="DataGridRow">
                    <EventSetter Event="MouseDoubleClick" Handler="__DataRow_DoubleClick" />

                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
                            <Setter Property="Background" Value="{DynamicResource WindowBackground}"/>
                        </Trigger>

                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
                            <Setter Property="Background" Value="{DynamicResource DataGridAlternationBackground}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource DataGridRowHover}"/>
                        </Trigger>
                    </Style.Triggers>

                    <Style.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{DynamicResource DataGridRowHighlightColor}" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="{DynamicResource TextForegroundColor}" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{DynamicResource DataGridRowHighlightColor}" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="{DynamicResource TextForegroundColor}" />
                    </Style.Resources>
                </Style>

                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
                    <Setter Property="Background" Value="{DynamicResource DataGridColumnHeaderBackground}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource DataGridColumnHeaderBorder}"/>
                    <EventSetter Event="PreviewMouseLeftButtonDown" Handler="__DataGridColumnHeader_MouseLeftButtonDown"/>
                    <EventSetter Event="PreviewMouseMove" Handler="__DataGridColumnHeader_MouseMove"/>
                    <EventSetter Event="PreviewMouseLeftButtonUp" Handler="__DataGridColumnHeader_MouseLeftButtonUp"/>
                    <EventSetter Event="PreviewMouseDoubleClick" Handler="__DataGridColumnHeader_MouseDoubleClick"/>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridColumnHeader">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0.5,0,0.5,1">
                                    <Grid>
                                        <Path x:Name="SortArrow"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"                                           
                                              Width="9" 
                                              Height="4" 
                                              Margin="0,1,0,0"
                                              Stretch="Fill"
                                              Opacity="0.3"
                                              Fill="{DynamicResource TextForeground}"
                                              Visibility="Collapsed"
                                              RenderTransformOrigin="0.5,0.5"
                                              Data="M 0 0 L 10 10 L 20 0 Z" />
                                        
                                        <ContentPresenter Margin="4"/>
                                    </Grid>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="SortDirection" Value="Ascending">
                                        <Setter Property="Background" Value="{DynamicResource DataGridColumnHeaderSortedBackground}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource DataGridColumnHeaderSortedBorder}"/>
                                        <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="SortArrow" Property="RenderTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="180" />
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="SortDirection" Value="Descending">
                                        <Setter Property="Background" Value="{DynamicResource DataGridColumnHeaderSortedBackground}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource DataGridColumnHeaderSortedBorder}"/>
                                        <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource DataGridColumnHeaderHoverBackground}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource DataGridColumnHeaderHoverBorder}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.Resources>
            
            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="GroupItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="GroupItem">
                                        <Expander IsExpanded="True" Background="{DynamicResource WindowBackground}">
                                            <Expander.Header>
                                                <Grid HorizontalAlignment="{Binding Path=HorizontalAlignment, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}, Mode=OneWayToSource}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>

                                                    <TextBlock Grid.Column="0" FontWeight="Bold" Text="{Binding Name}" Margin="0,0,10,0"/>
                                                    <Rectangle Grid.Column="1" Fill="{DynamicResource TextForeground}" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                                                </Grid>
                                            </Expander.Header>
                                            <Expander.Content>
                                                <ItemsPresenter/>
                                            </Expander.Content>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>

                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <Grid Background="SlateGray">
                                <TextBlock Grid.Column="0" Text="{Binding Name}" FontWeight="Bold" Foreground="White" Margin="24,0,0,0"/>
                            </Grid>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </DataGrid.GroupStyle>
        </DataGrid>

        <Path x:Name="reorderTargetIndicator" 
              Grid.Row="1"
              Width="16"
              Height="10"
              Stretch="Fill"
              Fill="{DynamicResource TextForeground}"
              Data="M 0 10 L 20 10 L 10 0 Z"
              Visibility="Hidden"/>

        <Popup x:Name="groupingToolTip" AllowsTransparency="False" Placement="Relative" PlacementTarget="{Binding ElementName=groupedColumnsArea}" IsOpen="False">
            <Border BorderThickness="1" BorderBrush="Gray">
                <TextBlock Text="{Binding GroupingToolTipText, ElementName=LeibitDataGridRoot}" Foreground="Black" Background="White" Padding="2,0,2,0"/>
            </Border>
        </Popup>

        <Popup x:Name="ungroupingToolTip" AllowsTransparency="False" Placement="Relative" PlacementTarget="{Binding ElementName=dataGrid}" IsOpen="False">
            <Border BorderThickness="1" BorderBrush="Gray">
                <TextBlock Text="{Binding UngroupingToolTipText, ElementName=LeibitDataGridRoot}" Foreground="Black" Background="White" Padding="2,0,2,0"/>
            </Border>
        </Popup>
    </Grid>
</UserControl>
